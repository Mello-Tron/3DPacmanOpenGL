#ifndef KEYBOARD_H
#define KEYBOARD_H

//////////////////////////////////////////////////////////////////////////////////////////////
// Purpose: Called by GLUT when keyboard or directional keys are pressed, controls camera direction
//  (cont): via up/down/left/right keys
// Input: (int) key - which key is pressed, (int) x - x location of mouse when key is pressed,
//  (cont): (int) y - y location of mouse when key is pressed
// Edited: Patrick H. 4/17
//////////////////////////////////////////////////////////////////////////////////////////////
void arrowKey(int key, int x, int y)
{
	if (key == GLUT_KEY_UP) //look up--doesn't allow you to look past straight up/down (no sommersaults)
	{
		at.y += .5;
	}
	if (key == GLUT_KEY_DOWN) //look down
	{
		at.y -= .5;
	}
	if (key == GLUT_KEY_RIGHT) //turn right
	{
		view = RotateY(-5) * view;//rotate eye -5 degrees
		GLfloat temp = at.y;
		at = eye + view;
		at.y = temp;
	}
	if (key == GLUT_KEY_LEFT) //turn left
	{
		view = RotateY(5) * view;//rotate eye 5 degrees
		GLfloat temp = at.y;
		at = eye + view;
		at.y = temp;
	}
	glutPostRedisplay();
}

//////////////////////////////////////////////////////////////////////////////////////////////
// Purpose: Called by GLUT whenever an ASCII character is generated by a key press down,
//  (cont): W = goForward is set to true, S = goReverse is set to true, A = strafeLeft is set to true,
//  (cont): D = strafeRight is set to true, Q = quit program
// Input: (int) key - the generated ASCII character, (int) x - x location of mouse when key is pressed,
//  (cont): (int) y - y location of mouse when key is pressed
// Edited: Patrick H. 4/17
//////////////////////////////////////////////////////////////////////////////////////////////
void keyPress(unsigned char key, int x, int y)
{
	if (key == 'w' || key == 'W')
	{
		goForward = true;
	}

	if (key == 's' || key == 'S')
	{
		goReverse = true;
	}

	if (key == 'a' || key == 'A')
	{
		strafeLeft = true;
	}

	if (key == 'd' || key == 'D')
	{
		strafeRight = true;
	}

	if (key == 'u' || key == 'U')
	{
		view = vec4(6.5, 50.0, 2.75, 0.0);
		eye = vec4(50.0, 50.0, 150.0, 0.0);
		at = vec4(50.0, 50.0, 150.0, 1.0);
		up = vec4(0.0, 51.0, 0.0, 0.0);
	}

	if (key == 'i' || key == 'I')
	{
		view = vec4(6.5, 0.0, 2.75, 0.0);
		eye = vec4(50.0, 0.0, 66.0, 0.0);
		at = vec4(50.0, 0.0, 66.0, 1.0);
		up = vec4(0.0, 1.0, 0.0, 0.0);
	}

	if (key == 'q' || key == 'Q') exit(0);

	glutPostRedisplay();
}

//////////////////////////////////////////////////////////////////////////////////////////////
// Purpose: Called by GLUT whenever an ASCII character is generated by a key release,
//  (cont): W = goForward is set to false, S = goReverse is set to false, A = strafeLeft is set to false
//  (cont): D = strafeRight is set to false
// Input: (int) key - the generated ASCII character, (int) x - x location of mouse when key is pressed,
//  (cont): (int) y - y location of mouse when key is pressed
// Edited: Patrick H. 4/17
//////////////////////////////////////////////////////////////////////////////////////////////
void keyRelease(unsigned char key, int x, int y) {
	if (key == 'w' || key == 'W')
	{
		goForward = false;
	}

	if (key == 's' || key == 'S')
	{
		goReverse = false;
	}

	if (key == 'a' || key == 'A')
	{
		strafeLeft = false;
	}

	if (key == 'd' || key == 'D')
	{
		strafeRight = false;
	}

	glutPostRedisplay();
}

#endif